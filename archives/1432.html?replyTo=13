<!DOCTYPE HTML>
<html class="no-js">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="renderer" content="webkit">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<title>HTTP 协议结构 - Marco Nie</title>

<link rel="stylesheet" href="https://niekun.net/webcdn/bootstrap-4.4.1-dist/css/bootstrap.min.css">
<link rel="stylesheet" href="../usr/themes/TypechoAwesome/normalize.css">
<link rel="stylesheet" href="../usr/themes/TypechoAwesome/style.css">
<!--[if lt IE 9]>
    <script src="//cdnjscn.b0.upaiyun.com/libs/html5shiv/r29/html5.min.js"></script>
    <script src="//cdnjscn.b0.upaiyun.com/libs/respond.js/1.3.0/respond.min.js"></script>
    <![endif]-->

<meta name="description" content="The Hypertext Transfer Protocol (HTTP) is an application protocol for distributed, collaborative,..." />
<meta name="generator" content="Typecho 1.2/18.10.23" />
<meta name="template" content="TypechoAwesome" />
<link rel="pingback" href="../action/xmlrpc" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="../action/xmlrpc?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../action/xmlrpc?wlw" />
<link rel="alternate" type="application/rss+xml" title="HTTP 协议结构 &raquo; Marco Nie &raquo; RSS 2.0" href="../feed/archives/1432.html" />
<link rel="alternate" type="application/rdf+xml" title="HTTP 协议结构 &raquo; Marco Nie &raquo; RSS 1.0" href="../feed/rss/archives/1432.html" />
<link rel="alternate" type="application/atom+xml" title="HTTP 协议结构 &raquo; Marco Nie &raquo; ATOM 1.0" href="../feed/atom/archives/1432.html" />
<script type="a6d54b098e41c60c2aadc903-text/javascript">
(function () {
    window.TypechoComment = {
        dom : function (id) {
            return document.getElementById(id);
        },
    
        create : function (tag, attr) {
            var el = document.createElement(tag);
        
            for (var key in attr) {
                el.setAttribute(key, attr[key]);
            }
        
            return el;
        },

        reply : function (cid, coid) {
            var comment = this.dom(cid), parent = comment.parentNode,
                response = this.dom('respond-post-1432'), input = this.dom('comment-parent'),
                form = 'form' == response.tagName ? response : response.getElementsByTagName('form')[0],
                textarea = response.getElementsByTagName('textarea')[0];

            if (null == input) {
                input = this.create('input', {
                    'type' : 'hidden',
                    'name' : 'parent',
                    'id'   : 'comment-parent'
                });

                form.appendChild(input);
            }

            input.setAttribute('value', coid);

            if (null == this.dom('comment-form-place-holder')) {
                var holder = this.create('div', {
                    'id' : 'comment-form-place-holder'
                });

                response.parentNode.insertBefore(holder, response);
            }

            comment.appendChild(response);
            this.dom('cancel-comment-reply-link').style.display = '';

            if (null != textarea && 'text' == textarea.name) {
                textarea.focus();
            }

            return false;
        },

        cancelReply : function () {
            var response = this.dom('respond-post-1432'),
            holder = this.dom('comment-form-place-holder'), input = this.dom('comment-parent');

            if (null != input) {
                input.parentNode.removeChild(input);
            }

            if (null == holder) {
                return true;
            }

            this.dom('cancel-comment-reply-link').style.display = 'none';
            holder.parentNode.insertBefore(response, holder);
            return false;
        }
    };
})();
</script>
<script type="a6d54b098e41c60c2aadc903-text/javascript">
(function () {
    var event = document.addEventListener ? {
        add: 'addEventListener',
        triggers: ['scroll', 'mousemove', 'keyup', 'touchstart'],
        load: 'DOMContentLoaded'
    } : {
        add: 'attachEvent',
        triggers: ['onfocus', 'onmousemove', 'onkeyup', 'ontouchstart'],
        load: 'onload'
    }, added = false;

    document[event.add](event.load, function () {
        var r = document.getElementById('respond-post-1432'),
            input = document.createElement('input');
        input.type = 'hidden';
        input.name = '_';
        input.value = (function () {
    var _fuLHrc = '64'//'G'
+//'cAX'
'c68'+//'9Xy'
'70'+'9'//'ih'
+'888'//'QI4'
+//'eQy'
'f08'+'62'//'f'
+'edc'//'We'
+//'X9W'
'e'+''///*'z'*/'z'
+'47'//'Pj2'
+/* 'uDo'//'uDo' */''+'AB'//'AB'
+'b'//'0'
+'6'//'H6l'
+'9'//'YYc'
+'39'//'cyK'
+//'9'
'4'+//'4o'
'4o'+//'TY'
'acc'+''///*'Ob'*/'Ob'
+'Y'//'Y'
+'1'//'R'
, _8dDs = [[22,24],[28,30],[31,32]];
    
    for (var i = 0; i < _8dDs.length; i ++) {
        _fuLHrc = _fuLHrc.substring(0, _8dDs[i][0]) + _fuLHrc.substring(_8dDs[i][1]);
    }

    return _fuLHrc;
})();

        if (null != r) {
            var forms = r.getElementsByTagName('form');
            if (forms.length > 0) {
                function append() {
                    if (!added) {
                        forms[0].appendChild(input);
                        added = true;
                    }
                }
            
                for (var i = 0; i < event.triggers.length; i ++) {
                    var trigger = event.triggers[i];
                    document[event.add](trigger, append);
                    window[event.add](trigger, append);
                }
            }
        }
    });
})();
</script></head>
<body>
<!--[if lt IE 8]
    <div class="browsehappy" role="dialog">当前网页 <strong>不支持</strong> 你正在使用的浏览器. 为了正常的访问, 请 <a href="http://browsehappy.com/">升级你的浏览器</a>.</div>
<![endif]-->
<div class="container-fluid">
<nav class="navbar navbar-expand-md navbar-light bg-light d-md-none">
<a class="navbar-brand text-dark" href="../index.html">Marco Nie</a>
<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
<span class="navbar-toggler-icon"></span>
</button>
<div class="collapse navbar-collapse" id="navbarSupportedContent">
<form class="form-inline" id="search" method="post" action="../index.html" role="search">
<label for="s" class="sr-only">搜索关键字</label>
<input type="text" id="s" name="s" class="text form-control" placeholder="输入关键字搜索" />
<button type="submit" class="submit my-auto">搜索</button>
</form>
<div class="dropdown-divider"></div>
<p class="text-info nav-title">分类</p>
<ul class="widget-list nav-item-style"><li class="category-level-0 category-parent"><a href="../category/Linux/index.html">Linux</a><ul class="widget-list nav-item-style"><li class="category-level-1 category-child category-level-odd"><a href="../category/ubuntu/index.html">ubuntu</a></li></ul></li><li class="category-level-0 category-parent"><a href="../category/photo/index.html">Photograph</a></li><li class="category-level-0 category-parent"><a href="../category/media/index.html">media process</a><ul class="widget-list nav-item-style"><li class="category-level-1 category-child category-level-odd"><a href="../category/ps/index.html">photoshop</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/fxp/index.html">final cut pro</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/lr/index.html">lightroom</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/c4d/index.html">cinema 4D</a></li></ul></li><li class="category-level-0 category-parent"><a href="../category/Windows/index.html">Windows</a></li><li class="category-level-0 category-parent"><a href="../category/macos/index.html">macOS</a></li><li class="category-level-0 category-parent"><a href="../category/hardware/index.html">hardware</a><ul class="widget-list nav-item-style"><li class="category-level-1 category-child category-level-odd"><a href="../category/router/index.html">router</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/a73/index.html">SONY A7M3</a></li></ul></li><li class="category-level-0 category-parent"><a href="../category/essay/index.html">essay</a></li><li class="category-level-0 category-parent"><a href="../category/other/index.html">other</a></li><li class="category-level-0 category-parent"><a href="../category/dev/index.html">Development</a><ul class="widget-list nav-item-style"><li class="category-level-1 category-child category-level-odd"><a href="../category/cpp/index.html">c++</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/py/index.html">python</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/go/index.html">go</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/siemens/index.html">siemens</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/web/index.html">web</a><ul class="widget-list nav-item-style"><li class="category-level-2 category-child category-level-even"><a href="../category/html/index.html">html</a></li><li class="category-level-2 category-child category-level-even"><a href="../category/css/index.html">css</a></li><li class="category-level-2 category-child category-level-even"><a href="../category/js/index.html">javascript</a><ul class="widget-list nav-item-style"><li class="category-level-3 category-child category-level-odd"><a href="../category/node/index.html">node.js</a></li><li class="category-level-3 category-child category-level-odd"><a href="../category/react/index.html">react</a></li></ul></li></ul></li></ul></li><li class="category-level-0 category-parent"><a href="../category/software/index.html">software</a></li></ul>
<div class="dropdown-divider"></div>
<p class="text-info nav-title">归档</p>
<ul class="navbar-nav mr-auto">
<li class="nav-item"><a class="nav-link nav-title" href="../2021/06/index.html">June 2021</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2021/05/index.html">May 2021</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2021/04/index.html">April 2021</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2021/03/index.html">March 2021</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2021/02/index.html">February 2021</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2021/01/index.html">January 2021</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/12/index.html">December 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/11/index.html">November 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/10/index.html">October 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/09/index.html">September 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/08/index.html">August 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/07/index.html">July 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/06/index.html">June 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/05/index.html">May 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/04/index.html">April 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/03/index.html">March 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/02/index.html">February 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2020/01/index.html">January 2020</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2019/12/index.html">December 2019</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2019/11/index.html">November 2019</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2019/10/index.html">October 2019</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2019/09/index.html">September 2019</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2019/08/index.html">August 2019</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2019/07/index.html">July 2019</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2019/04/index.html">April 2019</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2019/03/index.html">March 2019</a></li><li class="nav-item"><a class="nav-link nav-title" href="../2019/02/index.html">February 2019</a></li> </ul>
</div>
</nav>
</div>
<header id="header" class="clearfix">
<div class="container">
<div class="row">
<div class="site-name col-md-9 col-12 d-none d-md-block">
<a id="logo" class="text-decoration-none" href="../index.html">Marco Nie</a>
<p class="description mb-2">you are the company you keep...</p>
</div>
<div class="site-search col-md-3 d-none d-md-block">
<form id="search" method="post" action="../index.html" role="search">
<label for="s" class="sr-only">搜索关键字</label>
<input type="text" id="s" name="s" class="text" placeholder="输入关键字搜索" />
<button type="submit" class="submit my-auto">搜索</button>
</form>
</div>
<div class="col-12">
<ul class="nav nav-tabs clearfix" role="navigation">
<li class="nav-item">
<a class="nav-link" href="../index.html">Article</a>
</li>
<li class="nav-item">
<a class="nav-link" href="../start-page.html" title="About me">About me</a>
</li>
</ul>
</div>
</div>
</header>
</div>
<div id="body">
<div class="container">
<div class="row">
<div class="col-md-9 col-12" id="main" role="main">
<article class="post" itemscope itemtype="http://schema.org/BlogPosting">
<h1 class="post-title" itemprop="name headline"><a itemprop="url" href="1432.html">HTTP 协议结构</a></h1>
<ul class="post-meta">
<li itemprop="author" itemscope itemtype="http://schema.org/Person">作者: <a itemprop="name" href="../author/1/index.html" rel="author">admin</a></li>
<li>时间: <time datetime="2020-03-24T08:43:00+08:00" itemprop="datePublished">2020-03-24</time></li>
<li>分类: <a href="../category/web/index.html">web</a></li>
</ul>
<div class="post-content" itemprop="articleBody">
<blockquote>The Hypertext Transfer Protocol (HTTP) is an application protocol for distributed, collaborative, hypermedia information systems.[1] HTTP is the foundation of data communication for the World Wide Web, where hypertext documents include hyperlinks to other resources that the user can easily access, for example by a mouse click or by tapping the screen in a web browser.</blockquote><p>以上说明摘录自 Wikipedia，HTTP 全称为<strong>超文本传输协议</strong>，设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。通过HTTP或者HTTPS协议请求的资源由统一资源标识符（Uniform Resource Identifiers，URI）来标识。</p><h3>构成</h3><p>HTTP是一个客户端（用户）和服务端（网站）之间请求和应答的标准，通常使用TCP协议。有时也承载于TLS或SSL协议层之上，这个时候，就成了我们常说的HTTPS：<br><img src="../usr/uploads/2020/03/1755297292.png" alt="2020-03-24T00:48:01.png" title="2020-03-24T00:48:01.png"></p><p><strong>HTTP协议永远都是客户端发起请求，服务器回送响应。</strong><br><img src="../usr/uploads/2020/03/2181204214.png" alt="2020-03-24T00:50:21.png" title="2020-03-24T00:50:21.png"></p><p>HTTP是一个无状态的协议。协议对于事务处理没有记忆能力，服务器不知道客户端是什么状态。从另一方面讲，打开一个服务器上的网页和你之前打开这个服务器上的网页之间没有任何联系。可以使用 <strong>connection: Keep-Alive</strong> 来保留 tcp 握手连接。</p><p><strong>一次HTTP操作称为一个事务，其工作过程可分为四步：</strong></p><ul><li>首先客户机与服务器需要建立连接。只要单击某个超级链接，HTTP的工作开始。</li><li>建立连接后，客户机发送一个请求给服务器，请求方式的格式为：统一资源标识符（URI）、协议版本号，后边是MIME信息包括请求修饰符、客户机信息和可能的内容。</li><li>服务器接到请求后，给予相应的响应信息，其格式为一个状态行，包括信息的协议版本号、一个成功或错误的代码，后边是MIME信息包括服务器信息、实体信息和可能的内容。</li><li>客户端接收服务器所返回的信息通过浏览器显示在用户的显示屏上，然后客户机与服务器断开连接。</li></ul><p>HTTP是基于传输层的TCP协议，而TCP是一个端到端的面向连接的协议。所谓的端到端可以理解为进程到进程之间的通信。所以HTTP在开始传输之前，首先需要建立TCP连接，而TCP连接的过程需要三次握手：<br><img src="../usr/uploads/2020/03/2093610890.png" alt="2020-03-24T00:54:05.png" title="2020-03-24T00:54:05.png"></p><p>可以使用 <strong>Wireshark</strong> 网络协议分析工具来查看一个握手过程：<a href="https://www.wireshark.org/">https://www.wireshark.org/</a></p><p>打开 Wireshark，点击 capture - options，上方选择当前连接外网的硬件，我选择 WiFi，在 capture filter 里设置监听地址：tcp port http:<br><img src="../usr/uploads/2020/03/2495975856.png" alt="2020-03-24T02:00:39.png" title="2020-03-24T02:00:39.png"></p><p>在浏览器访问：<a href="http://baidu.com，记得如果使用了代理的话先关掉。">http://baidu.com，记得如果使用了代理的话先关掉。</a></p><p>在 wireshark 里就会显示报文信息：<br><img src="../usr/uploads/2020/03/318072432.png" alt="2020-03-24T02:03:50.png" title="2020-03-24T02:03:50.png"></p><p>可以通过颜色区分报文种类，绿色是 tcp 报文，黑色是有问题的报文。如果报文过多可以使用上面的 filter 过滤有用信息。</p><p><strong>上面的报文显示了握手的过程：</strong></p><ul><li>前三个 tcp 连接分别是客户端发出连接请求，服务端回应客户端，客户端回应服务端确认</li><li><strong>然后客户端发起一个 http 页面 request 请求</strong></li><li>服务端发出 tcp 确认请求</li><li><strong>服务端发送 response http 数据 200 状态码</strong></li><li>客户端发出 tcp 确认</li></ul><p>下面主要分析 <strong>request</strong> 和 <strong>response</strong> 的 http 数据。</p><hr><h3>request 请求</h3><p>tcp 握手成功后，客户端就通过发送 request 开始请求 http 页面。</p><p><strong>发出的请求信息（message request）结构如下:</strong></p><ul><li>请求行（例如GET /images/logo.gif HTTP/1.1，表示从/images目录下请求logo.gif这个文件）</li><li>请求头（例如Accept-Language: en）</li><li>空行</li><li>其他消息体</li></ul><p>请求行和标题必须以<code>&lt;CR&gt;&lt;LF&gt;</code>作为结尾。空行内必须只有<code>&lt;CR&gt;&lt;LF&gt;</code>而无其他空格。在HTTP/1.1协议中，所有的请求头，除Host外，都是可选的。</p><p>一个最简单的 request：</p><pre><code>GET / HTTP/1.1
Host: www.bing.com</code></pre><p>末尾有一个空行。第一行指定方法、资源路径、协议版本；第二行是在1.1版里必带的一个header作用于指定主机。</p><p>上面访问 <a href="https://baidu.com">http://baidu.com</a> 的request 全部内容如下：(在 wireshark 点击 request http 报文可查看)</p><pre><code>    GET / HTTP/1.1\r\n
    Host: news.baidu.com\r\n
    Connection: keep-alive\r\n
    Upgrade-Insecure-Requests: 1\r\n
    DNT: 1\r\n
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\r\n
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\r\n
    Referer: https://www.baidu.com/\r\n
    Accept-Encoding: gzip, deflate\r\n
    Accept-Language: en,en-US;q=0.9,zh-CN;q=0.8,zh;q=0.7,zh-TW;q=0.6\r\n
    Cookie: BIDUPSID=DFBCEB19126518FE5B14DE02435939DF; PSTM=1585012306; BAIDUID=DFBCEB19126518FEC81AB23A0B7A652F:FG=1; H_PS_PSSID=30971_1426_31118_21108_30824_26350\r\n
    \r\n
    [Full request URI: http://news.baidu.com/]
    [HTTP request 1/3]
    [Response in frame: 23]
    [Next request in frame: 599]</code></pre><h4>请求方法</h4><p>HTTP/1.1协议中共定义了八种方法（也叫“动作”）来以不同方式操作指定的资源：</p><ul><li><strong>GET</strong> 向指定的资源发出“显示”请求。使用GET方法应该只用在读取数据，GET上要在url之外带一些参数就只能依靠url上附带querystring。</li><li><strong>HEAD</strong> 与GET方法一样，都是向服务器发出指定资源的请求。只不过服务器将不传回资源的本文部分。</li><li><strong>POST</strong> 向指定资源提交数据，请求服务器进行处理（例如提交表单或者上传文件）。数据被包含在请求本文中。</li><li><strong>PUT</strong> 向指定资源位置上传其最新内容。</li><li><strong>DELETE</strong> 请求服务器删除Request-URI所标识的资源。</li><li><strong>TRACE</strong> 回显服务器收到的请求，主要用于测试或诊断。</li><li><strong>OPTIONS</strong> 这个方法可使服务器传回该资源所支持的所有HTTP请求方法。</li><li><strong>CONNECT</strong> HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接。</li></ul><p>当某个请求所针对的资源不支持对应的请求方法的时候，服务器应当返回状态码405（Method Not Allowed），当服务器不认识或者不支持对应的请求方法的时候，应当返回状态码501（Not Implemented）。</p><p><strong>最常用的就是 GET 和 POST 方法。</strong></p><p><strong>GET和POST的区别：</strong></p><ul><li>GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&相连，如EditPosts.aspx?name=test1&id=123456. POST方法是把提交的数据放在HTTP包的Body中。</li><li>GET提交的数据大小有限制，最多只能有1024字节（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制。</li><li>GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值。</li><li>GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码。</li></ul><h4>版本</h4><ul><li><strong>HTTP/0.9</strong> 已过时。只接受GET一种请求方法，没有在通讯中指定版本号，且不支持请求头。不支持 POST</li><li><strong>HTTP/1.0</strong> 这是第一个在通讯中指定版本号的HTTP协议版本，至今仍被广泛采用，特别是在代理服务器中。</li><li><strong>HTTP/1.1</strong> 持久连接被默认采用，并能很好地配合代理服务器工作。还支持以管道方式在同时发送多个请求，降低线路负载提高传输速度。</li><li><strong>HTTP/2</strong> 当前版本，于2015年5月作为互联网标准正式发布。</li></ul><h4>请求头</h4><p>HTTP 头字段根据实际用途被分为以下 4 种类型：</p><ul><li>通用头字段(英语：General Header Fields)</li><li>请求头字段(英语：Request Header Fields)</li><li>响应头字段(英语：Response Header Fields)</li><li>实体头字段(英语：Entity Header Fields)</li></ul><p>常见的请求头字段：</p><ul><li>Accept 能够接受的回应内容类型：Accept: text/plain</li><li>Connection 该浏览器想要优先使用的连接类型：Connection: keep-alive</li><li>Content-Type 请求体的多媒体类型：Content-Type: application/x-www-form-urlencoded</li><li>Host 服务器的域名(用于虚拟主机 )，以及服务器所监听的传输控制协议端口号：Host: en.wikipedia.org:80</li><li>User-Agent - 浏览器的浏览器身份标识字符串：ser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0</li><li>If-Modified-Since 把浏览器端缓存页面的最后修改时间发送到服务器，如果和服务器文件时间一致，那么返回304：If-Modified-Since: Thu, 09 Feb 2012 09:07:57 GMT</li><li>pragma 指定“no-cache”值表示服务器必须返回一个刷新后的文档，即使它是代理服务器而且已经有了页面的本地拷贝，在HTTP/1.1版本中，它和Cache-Control: no-cache作用一模一样：pragma: no-cache</li><li>Cache-Control 指定请求和响应遵循的缓存机制：Cache-Control: no-cache</li><li>Cookie 之前由服务器通过 Set- Cookie （下文详述）发送的一个 超文本传输协议Cookie</li></ul><p>常见的非标准请求头字段：</p><ul><li>DNT 请求某个网页应用程序停止跟踪某个用户：DNT: 1 (DNT启用)</li><li>X-Forwarded-For 一个事实标准 ，用于标识某个通过超文本传输协议代理或负载均衡连接到某个网页服务器的客户端的原始互联网地址：X-Forwarded-For: 129.78.138.66, 129.78.64.103</li><li>X-Forwarded-Host 一个事实标准 ，用于识别客户端原本发出的 Host 请求头部：X-Forwarded-Host: en.wikipedia.org</li><li>X-Forwarded-Proto 一个事实标准，用于标识某个超文本传输协议请求最初所使用的协议：X-Forwarded-Proto: https</li></ul><p>更多请求头字段参考：<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#%E8%AF%B7%E6%B1%82%E5%AD%97%E6%AE%B5">wikepedia</a></p><h3>response 响应</h3><p>服务端发出 tcp 确认后，发出 response 响应 http 页面。</p><p><strong>发出的响应信息（message request）结构如下:</strong></p><ul><li>状态行（例如HTTP/1.1 200 OK，表示从信息传递成功）</li><li>响应头（例如Content-Length: 3059）</li><li>空行</li><li>传递实体内容(可以为空)</li></ul><p>下面是一个 http 页面的响应实例：</p><pre><code>    HTTP/1.1 200 OK\r\n
    Content-Type: text/html; charset=utf-8\r\n
    Server: GitHub.com\r\n
    Last-Modified: Fri, 22 Jan 2016 02:52:30 GMT\r\n
    ETag: W/&quot;56a1996e-2d27&quot;\r\n
    Access-Control-Allow-Origin: *\r\n
    Expires: Tue, 24 Mar 2020 06:32:29 GMT\r\n
    Cache-Control: max-age=600\r\n
    Content-Encoding: gzip\r\n
    X-Proxy-Cache: MISS\r\n
    X-GitHub-Request-Id: EAD6:198D:D9A2C:E5FDD:5E79A724\r\n
    Content-Length: 4509\r\n
    Accept-Ranges: bytes\r\n
    Date: Tue, 24 Mar 2020 06:22:29 GMT\r\n
    Via: 1.1 varnish\r\n
    Age: 0\r\n
    Connection: keep-alive\r\n
    X-Served-By: cache-hnd18730-HND\r\n
    X-Cache: MISS\r\n
    X-Cache-Hits: 0\r\n
    X-Timer: S1585030950.603621,VS0,VE171\r\n
    Vary: Accept-Encoding\r\n
    X-Fastly-Request-ID: 806211821134676c48d8c7c6ed9cee2a6bad952d\r\n
    \r\n
    [HTTP response 1/5]
    [Time since request: 0.405424000 seconds]
    [Request in frame: 2595]
    [Next request in frame: 2604]
    [Next response in frame: 2623]
    [Request URI: http://zq210wl.github.io/imgs/noise.png]
    Content-encoded entity body (gzip): 4509 bytes -&gt; 11559 bytes
    File Data: 11559 bytes
    &lt;!DOCTYPE HTML&gt;
    &lt;html&gt;
    &lt;head&gt;
      &lt;meta charset=&quot;utf-8&quot;&gt;
      ...
    &lt;/head&gt;
    &lt;body&gt;
      ...
    &lt;/body&gt;</code></pre><h4>状态行</h4><p>响应行结构为：当前HTTP版本号，3位数字组成的状态代码，以及描述状态的短语，彼此由空格分隔。</p><h4>状态码</h4><p>状态代码的第一个数字代表当前响应的类型：</p><ul><li>1xx消息——请求已被服务器接收，继续处理</li><li>2xx成功——请求已成功被服务器接收、理解、并接受</li><li>3xx重定向——需要后续操作才能完成这一请求</li><li>4xx请求错误——请求含有词法错误或者无法被执行</li><li>5xx服务器错误——服务器在处理某个正确请求时发生错误</li></ul><p>详细的状态码介绍参考：<a href="192.html">https://blog.niekun.net/archives/192.html</a></p><h4>响应头</h4><p>HTTP 头字段根据实际用途被分为以下 4 种类型：</p><ul><li>通用头字段(英语：General Header Fields)</li><li>请求头字段(英语：Request Header Fields)</li><li>响应头字段(英语：Response Header Fields)</li><li>实体头字段(英语：Entity Header Fields)</li></ul><p>常见的响应头字段：</p><ul><li>Allow 对于特定资源有效的动作：Allow: GET, HEAD</li><li>Age 这个对象在代理缓存中存在的时间，以秒为单位：Age: 12</li><li>Connection 针对该连接所预期的选项：Connection: keep-alive</li><li>Content-Language 内容所使用的语言：Content-Language: da</li><li>Expires 指定一个日期/时间，超过该时间则认为此回应已经过期：Expires: Thu, 01 Dec 1994 16:00:00 GMT</li><li>Location 用来进行重定向，或者在创建了某个新资源时使用：Location: <a href="https://www.w3.org/pub/WWW/People.html">http://www.w3.org/pub/WWW/People.html</a></li><li>Refresh 用于设定可定时的重定向跳转。右边例子设定了5秒后跳转至：Refresh: 5; url=<a href="https://www.w3.org/pub">http://www.w3.org/pub</a></li><li>Server服务器的名字：Server: Apache/2.4.1 (Unix)</li><li>Upgrade 要求客户端升级到另一个协议：Upgrade: HTTP/2.0</li><li>Set-Cookie 设置 HTTP cookie记录客户端身份：Set-Cookie: UserID=JohnDoe; Max-Age=3600; Version=1</li></ul><p>常见的非标准回应字段：</p><ul><li>X-Powered-By 表明用于支持当前网页应用程序的技术：X-Powered-By: PHP/5.4.0</li><li>X-Content-Duration 指出音视频的长度，单位为秒：X-Content-Duration: 42.666</li></ul><p>详细的响应头字段参考：<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5#%E8%AF%B7%E6%B1%82%E5%AD%97%E6%AE%B5">Wikipedia</a></p><h4>响应头的 location 段</h4><p>HTTP Location 是在两种情况使用在响应头中：</p><ul><li>要求网页浏览器加载其他网页(域名转址)。在这种情况下，应该使用HTTP状态码3xx发送Location头。</li><li>提供有关新创建资源位置的信息。在这种情况下，应该使用HTTP状态码201或202发送Location头。</li></ul><p>示例：</p><pre><code>HTTP/1.1 302 Found
Location: http://www.example.org/index.php</code></pre><p>客户端请求的 URL 被服务端重定向到 <a href="http://www.example.org/index.php.">http://www.example.org/index.php.</a></p><p>客户端请求：</p><pre><code>GET /blog HTTP/1.1
Host: www.example.com</code></pre><p>服务端响应：</p><pre><code>HTTP/1.1 302 Found
Location: /articles/</code></pre><p>该位置 /blog 被客户端定向到 <a href="http://www.example.com/articles/.">http://www.example.com/articles/.</a></p><h4>解决HTTP无状态的问题</h4><p>使用Cookie来实现：</p><ul><li>服务器给每个Session分配一个唯一的JSESSIONID，并通过Cookie发送给客户端。</li><li>当客户端发起新的请求的时候，将在Cookie头中携带这个JSESSIONID。这样服务器能够找到这个客户端对应的Session。<br><img src="../usr/uploads/2020/03/2798926810.png" alt="2020-03-24T07:45:16.png" title="2020-03-24T07:45:16.png"></li></ul><p>使用URL回写来实现：<br>URL回写是指服务器在发送给浏览器页面的所有链接中都携带JSESSIONID的参数，这样客户端点击任何一个链接都会把JSESSIONID带会服务器。如果直接在浏览器输入服务端资源的url来请求该资源，那么Session是匹配不到的。</p><h3>URI 统一资源标志符</h3><p>统一资源标识符（英语：Uniform Resource Identifier，缩写：URI）在电脑术语中是一个用于标识某一互联网资源名称的字符串。</p><p>该种标识允许用户对网络中（一般指万维网）的资源通过特定的协议进行交互操作。URI的最常见的形式是统一资源定位符（URL），经常指定为非正式的网址。更罕见的用法是统一资源名称（URN），其目的是通过提供一种途径。用于在特定的名字空间资源的标识，以补充网址。</p><p>通用URI的格式如下：</p><pre><code>[协议名]://[用户名]:[密码]@[主机名]:[端口]/[路径]?[查询参数]#[片段ID]</code></pre><p><strong>下面是两个常见的 URI 构成：</strong></p><pre><code>
                   hierarchical part
        ┌───────────────────┴─────────────────────┐
                    authority               path
        ┌───────────────┴───────────────┐┌───┴────┐
  abc://username:<a href="../cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="16667765656179647256736e777b667a733875797b">[email&#160;protected]</a>:123/path/data?key=value&amp;key2=value2#fragid1
  └┬┘   └───────┬───────┘ └────┬────┘ └┬┘           └─────────┬─────────┘ └──┬──┘
scheme  user information     host     port                  query         fragment


  urn:example:mammal:monotreme:echidna
  └┬┘ └──────────────┬───────────────┘
scheme              path</code></pre><p>以 <code>https://zh.wikipedia.org:80/w/index.php?title=Special:随机页面#ABC</code> 为例, 其中：</p><ul><li>https，是协议；</li><li>zh.wikipedia.org，是服务器；</li><li>80，是服务器上的网络端口号；</li><li>/w/index.php，是路径；</li><li>?title=Special:随机页面，是询问。</li><li>\#ABC，是片段</li></ul><h3>　参考连接</h3><p><a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE">超文本传输协议</a><br><a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5">HTTP头字段</a><br><a href="https://zh.wikipedia.org/wiki/HTTP_Location">HTTP_Location</a><br><a href="https://zh.wikipedia.org/wiki/%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E6%A0%87%E5%BF%97%E7%AC%A6">统一资源标志符</a><br><a href="https://zh.wikipedia.org/wiki/%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E5%AE%9A%E4%BD%8D%E7%AC%A6">一资源定位符</a><br><a href="https://www.jianshu.com/p/7275aa3e4a13">HTTP协议详解</a></p> </div>
<p itemprop="keywords" class="tags">标签: none</p>
</article>
<div id="comments">
<h3>仅有一条评论</h3>
<ol class="comment-list"><li itemscope itemtype="http://schema.org/UserComments" id="comment-13" class="comment-body comment-parent comment-odd">
<div class="comment-author" itemprop="creator" itemscope itemtype="http://schema.org/Person">
<span itemprop="image"><img class="avatar" src="https://secure.gravatar.com/avatar/?s=32&amp;r=G&amp;d=" alt="ahxinny" width="32" height="32" /></span>
<cite class="fn" itemprop="name">ahxinny</cite>
</div>
<div class="comment-meta">
<a href="1432.html#comment-13"><time itemprop="commentTime" datetime="2020-03-25T17:19:58+08:00">March 25th, 2020 at 05:19 pm</time></a>
</div>
<div class="comment-content" itemprop="commentText">
<p>绝对硬核。好功夫。</p> </div>
<div class="comment-reply">
<a href="1432.html?replyTo=13#respond-post-1432" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; return TypechoComment.reply('comment-13', 13);" data-cf-modified-a6d54b098e41c60c2aadc903-="">回复</a> </div>
</li>
</ol>
<div id="respond-post-1432" class="respond">
<div class="cancel-comment-reply">
<a id="cancel-comment-reply-link" href="1432.html#respond-post-1432" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; return TypechoComment.cancelReply();" data-cf-modified-a6d54b098e41c60c2aadc903-="">取消回复</a> </div>
<h3 id="response">添加新评论</h3>
<form method="post" action="https://blog.niekun.net/archives/1432.html/comment?parent=13" id="comment-form" role="form">
<p>
<label for="author" class="required">称呼</label>
<input type="text" name="author" id="author" class="text" value="" required />
</p>
<p>
<label for="mail" class="required">Email</label>
<input type="email" name="mail" id="mail" class="text" value="" required />
</p>
<p>
<label for="url">网站</label>
<input type="url" name="url" id="url" class="text" placeholder="http://" value="" />
</p>
<p>
<label for="textarea" class="required">内容</label>
<textarea rows="8" cols="50" name="text" id="textarea" class="textarea" required></textarea>
</p>
<p>
<button type="submit" class="submit">提交评论</button>
</p>
</form>
</div>
</div>
<ul class="post-near">
<li>上一篇: <a href="1428.html" title="指定颜色修改 in Photoshop">指定颜色修改 in Photoshop</a></li>
<li>下一篇: <a href="1443.html" title="百度云网盘直链获取及下载">百度云网盘直链获取及下载</a></li>
</ul>
</div>
<div class="col-md-3 d-none d-md-block" id="secondary" role="complementary">
<section class="widget">
<h4 class="Display 2">最新文章</h4>
<ul class="widget-list">
<li><a href="2321.html">openwrt 扩展根目录空间</a></li><li><a href="2320.html">理解 Linux shell 脚本的 2&gt;&amp;1</a></li><li><a href="2310.html">通过 telegram-cli 命令行发送 telegram 消息</a></li><li><a href="2305.html">配置外部网络存储器作为 Time Machine 备份</a></li><li><a href="2303.html">在 Ubuntu 中加载 smb 共享目录为本地路径</a></li><li><a href="2294.html"> openwrt 时区设置</a></li><li><a href="2291.html">openwrt network 配置</a></li><li><a href="2290.html">通过 GitHub API 获取数据</a></li><li><a href="2287.html">Linux 脚本中的 Shebang #!</a></li><li><a href="2281.html">Ubuntu desktop 配置 vnc server</a></li> </ul>
</section>
<section class="widget">
<h4 class="Display 2">最近回复</h4>
<ul class="widget-list">
<li><a href="97.html#pingback-30">macOS设置系统代理 R11; Mr. Wen的学习记录！</a>: [...]如果需要频繁的打开/关闭代理，每次都需要输入以上命令比...</li>
<li><a href="1258.html#comment-29">marco nie</a>: 换到 wsl2 吧，可以完美解决的：https://blog.n...</li>
<li><a href="1258.html#comment-28">hm</a>: 小瑕疵：WSL(即WSL1)这样并不能解决
看了下 https:...</li>
<li><a href="2191.html#comment-27">ahxinny</a>: 编程会随时出现报错，与环境关系很大。有时软件升级会造成系统不兼容...</li>
<li><a href="2011.html#comment-26">ahxinny</a>: let相当于局域变量，但 和局域变量还是不同。局域变量在函数体内...</li>
<li><a href="1918.html#comment-25">ahxinny</a>: 有点云里雾里的。</li>
<li><a href="1895.html#comment-24">ahxinny</a>: 前面的易懂，指针之后有点登天。</li>
<li><a href="1885.html#comment-23">ahxinny</a>: 学习了。哈哈哈！</li>
<li><a href="1906.html#comment-22">ahxinny</a>: 可以偷看你的手机内容了。</li>
<li><a href="1869.html#comment-21">ahxinny</a>: 打错了不能撤销消息?</li>
</ul>
</section>
<section class="widget">
<h4 class="Display 2">分类</h4>
<ul class="widget-list"><li class="category-level-0 category-parent"><a href="../category/Linux/index.html">Linux</a><ul class="widget-list"><li class="category-level-1 category-child category-level-odd"><a href="../category/ubuntu/index.html">ubuntu</a></li></ul></li><li class="category-level-0 category-parent"><a href="../category/photo/index.html">Photograph</a></li><li class="category-level-0 category-parent"><a href="../category/media/index.html">media process</a><ul class="widget-list"><li class="category-level-1 category-child category-level-odd"><a href="../category/ps/index.html">photoshop</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/fxp/index.html">final cut pro</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/lr/index.html">lightroom</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/c4d/index.html">cinema 4D</a></li></ul></li><li class="category-level-0 category-parent"><a href="../category/Windows/index.html">Windows</a></li><li class="category-level-0 category-parent"><a href="../category/macos/index.html">macOS</a></li><li class="category-level-0 category-parent"><a href="../category/hardware/index.html">hardware</a><ul class="widget-list"><li class="category-level-1 category-child category-level-odd"><a href="../category/router/index.html">router</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/a73/index.html">SONY A7M3</a></li></ul></li><li class="category-level-0 category-parent"><a href="../category/essay/index.html">essay</a></li><li class="category-level-0 category-parent"><a href="../category/other/index.html">other</a></li><li class="category-level-0 category-parent"><a href="../category/dev/index.html">Development</a><ul class="widget-list"><li class="category-level-1 category-child category-level-odd"><a href="../category/cpp/index.html">c++</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/py/index.html">python</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/go/index.html">go</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/siemens/index.html">siemens</a></li><li class="category-level-1 category-child category-level-odd"><a href="../category/web/index.html">web</a><ul class="widget-list"><li class="category-level-2 category-child category-level-even"><a href="../category/html/index.html">html</a></li><li class="category-level-2 category-child category-level-even"><a href="../category/css/index.html">css</a></li><li class="category-level-2 category-child category-level-even"><a href="../category/js/index.html">javascript</a><ul class="widget-list"><li class="category-level-3 category-child category-level-odd"><a href="../category/node/index.html">node.js</a></li><li class="category-level-3 category-child category-level-odd"><a href="../category/react/index.html">react</a></li></ul></li></ul></li></ul></li><li class="category-level-0 category-parent"><a href="../category/software/index.html">software</a></li></ul> </section>
<section class="widget">
<h4 class="Display 2">归档</h4>
<ul class="widget-list">
<li><a href="../2021/06/index.html">June 2021</a></li><li><a href="../2021/05/index.html">May 2021</a></li><li><a href="../2021/04/index.html">April 2021</a></li><li><a href="../2021/03/index.html">March 2021</a></li><li><a href="../2021/02/index.html">February 2021</a></li><li><a href="../2021/01/index.html">January 2021</a></li><li><a href="../2020/12/index.html">December 2020</a></li><li><a href="../2020/11/index.html">November 2020</a></li><li><a href="../2020/10/index.html">October 2020</a></li><li><a href="../2020/09/index.html">September 2020</a></li><li><a href="../2020/08/index.html">August 2020</a></li><li><a href="../2020/07/index.html">July 2020</a></li><li><a href="../2020/06/index.html">June 2020</a></li><li><a href="../2020/05/index.html">May 2020</a></li><li><a href="../2020/04/index.html">April 2020</a></li><li><a href="../2020/03/index.html">March 2020</a></li><li><a href="../2020/02/index.html">February 2020</a></li><li><a href="../2020/01/index.html">January 2020</a></li><li><a href="../2019/12/index.html">December 2019</a></li><li><a href="../2019/11/index.html">November 2019</a></li><li><a href="../2019/10/index.html">October 2019</a></li><li><a href="../2019/09/index.html">September 2019</a></li><li><a href="../2019/08/index.html">August 2019</a></li><li><a href="../2019/07/index.html">July 2019</a></li><li><a href="../2019/04/index.html">April 2019</a></li><li><a href="../2019/03/index.html">March 2019</a></li><li><a href="../2019/02/index.html">February 2019</a></li> </ul>
</section>
<section class="widget">
<h4 class="Display 2">其它</h4>
<ul class="widget-list">
<li><a href="../feed/index.html">文章 RSS</a></li>
<li><a href="../feed/comments/index.html">评论 RSS</a></li>
</ul>
</section>
</div>
</div>
</div>
</div>
<footer id="footer" role="contentinfo">
&copy; 2021 <a href="../index.html">Marco Nie</a>. All rights reserved. Power by <a href="http://typecho.org">Typecho.</a> Theme designed by <a href="https://niekun.net">Marco Nie.</a>
</footer>
<script data-cfasync="false" src="../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="a6d54b098e41c60c2aadc903-text/javascript">
    navItemSytle();
</script>
<script src="https://niekun.net/webcdn/jquery-3.4.1/jquery.min.js" type="a6d54b098e41c60c2aadc903-text/javascript"></script>
<script src="https://niekun.net/webcdn//popper.js-1.16.0/popper.min.js" type="a6d54b098e41c60c2aadc903-text/javascript"></script>
<script src="https://niekun.net/webcdn/bootstrap-4.4.1-dist/js/bootstrap.min.js" type="a6d54b098e41c60c2aadc903-text/javascript"></script>
<script src="../usr/themes/TypechoAwesome/navItem.js" type="a6d54b098e41c60c2aadc903-text/javascript"></script>
<script src="https://ajax.cloudflare.com/cdn-cgi/scripts/7d0fa10a/cloudflare-static/rocket-loader.min.js" data-cf-settings="a6d54b098e41c60c2aadc903-|49" defer=""></script><script defer src="https://static.cloudflareinsights.com/beacon.min.js" data-cf-beacon='{"rayId":"67896252e8dd368a","r":1,"version":"2021.7.0","si":10}'></script>
</body>
</html>