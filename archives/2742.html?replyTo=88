<!DOCTYPE html>
<html lang="zh-Hans">
<head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7051950560656517" crossorigin="anonymous" type="66bd7110de0b2d97df1c3f5f-text/javascript"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Joplin server 搭建 | Marco Nie</title>
    <link rel="stylesheet" href="../usr/themes/classic-22/static/css/style.css">
        <link rel="canonical" href="2742.html" />
<link rel="pingback" href="../action/xmlrpc" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="../action/xmlrpc?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../action/xmlrpc?wlw" />
<link rel="alternate" type="application/rss+xml" title="Joplin server 搭建 &raquo; Marco Nie &raquo; RSS 2.0" href="../feed/archives/2742.html" />
<link rel="alternate" type="application/rdf+xml" title="Joplin server 搭建 &raquo; Marco Nie &raquo; RSS 1.0" href="../feed/rss/archives/2742.html" />
<link rel="alternate" type="application/atom+xml" title="Joplin server 搭建 &raquo; Marco Nie &raquo; ATOM 1.0" href="../feed/atom/archives/2742.html" />
<meta name="description" content="joplin 是一款开源笔记应用，全平台适用，支持多种云端同步方式。最近体验了下感觉不错，尤其是可以自行搭建 server 服务端保存数据，适合喜欢管理整个数据流程的人士。下面介绍如何在服务器通..." />
<meta name="generator" content="Typecho 1.3.0" />
<meta name="template" content="classic-22" />
<meta property="og:type" content="article" />
<meta property="og:url" content="https://blog.niekun.net/archives/2742.html" />
<meta name="twitter:title" property="og:title" itemprop="name" content="Joplin server 搭建" />
<meta name="twitter:description" property="og:description" itemprop="description" content="joplin 是一款开源笔记应用，全平台适用，支持多种云端同步方式。最近体验了下感觉不错，尤其是可以自行搭建 server 服务端保存数据，适合喜欢管理整个数据流程的人士。下面介绍如何在服务器通..." />
<meta property="og:site_name" content="Marco Nie" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:domain" content="blog.niekun.net" />
<script type="66bd7110de0b2d97df1c3f5f-text/javascript">
(function () {
    window.TypechoComment = {
        dom : function (sel) {
            return document.querySelector(sel);
        },
        
        visiable: function (el, show) {
            el.style.display = show ? '' : 'none';
        },
    
        create : function (tag, attr) {
            const el = document.createElement(tag);
        
            for (const key in attr) {
                el.setAttribute(key, attr[key]);
            }
        
            return el;
        },
        
        inputParent: function (response, coid) {
            const form = 'form' === response.tagName ? response : response.querySelector('form');
            let input = form.querySelector('input[name=parent]');
            
            if (null == input && coid) {
                input = this.create('input', {
                    'type' : 'hidden',
                    'name' : 'parent'
                });

                form.appendChild(input);
            }
            
            if (coid) {
                input.setAttribute('value', coid);
            } else if (input) {
                input.parentNode.removeChild(input);
            }
        },
        
        getChild: function (root, node) {
            const parentNode = node.parentNode;
            
            if (parentNode === null) {
                return null;
            } else if (parentNode === root) {
                return node;
            } else {
                return this.getChild(root, parentNode);
            }
        },

        reply : function (htmlId, coid, btn) {
            const response = this.dom('#respond-post-2742'),
                textarea = response.querySelector('textarea[name=text]'),
                comment = this.dom('#' + htmlId),
                child = this.getChild(comment, btn);

            this.inputParent(response, coid);

            if (this.dom('#respond-post-2742-holder') === null) {
                const holder = this.create('div', {
                    'id' : 'respond-post-2742-holder'
                });

                response.parentNode.insertBefore(holder, response);
            }
            
            if (child) {
                comment.insertBefore(response, child.nextSibling);
            } else {
                comment.appendChild(response);
            }

            this.visiable(this.dom('#cancel-comment-reply-link'), true);

            if (null != textarea) {
                textarea.focus();
            }

            return false;
        },

        cancelReply : function () {
            const response = this.dom('#respond-post-2742'),
                holder = this.dom('#respond-post-2742-holder');

            this.inputParent(response, false);

            if (null === holder) {
                return true;
            }

            this.visiable(this.dom('#cancel-comment-reply-link'), false);
            holder.parentNode.insertBefore(response, holder);
            return false;
        }
    };
})();
</script><script type="66bd7110de0b2d97df1c3f5f-text/javascript">
(function () {
    const events = ['scroll', 'mousemove', 'keyup', 'touchstart'];
    let added = false;

    document.addEventListener('DOMContentLoaded', function () {
        const response = document.querySelector('#respond-post-2742');

        if (null != response) {
            const form = 'form' === response.tagName ? response : response.querySelector('form');
            const input = document.createElement('input');
            
            input.type = 'hidden';
            input.name = '_';
            input.value = (function () {
    var _w5qD9 = //'erh'
'15'+//'kzR'
'5c7'+//'FL4'
'07'+//'wb'
'8'+//'20E'
'b6'+//'Ju8'
'0'+'fcd'//'p'
+//'G'
'4'+'5'//'7'
+//'4'
'8b1'+//'yGt'
'4'+'Wj9'//'Wj9'
+//'Vd'
'1c'+//'r'
'b'+//'o'
'5e6'+'594'//'e'
+'6d5'//'z'
, _w8f = [[20,23]];
    
    for (var i = 0; i < _w8f.length; i ++) {
        _w5qD9 = _w5qD9.substring(0, _w8f[i][0]) + _w5qD9.substring(_w8f[i][1]);
    }

    return _w5qD9;
})();;
 
            if (form) {
                function append() {
                    if (!added) {
                        form.appendChild(input);
                        added = true;
                    }
                }
            
                for (const event of events) {
                    window.addEventListener(event, append);
                }
            }
        }
    });
})();
</script></head>

<body>

<header class="site-navbar container-fluid">
    <nav>
        <ul class="site-name">
                    <li>
                <a href="../index.html" class="brand">Marco Nie</a>
            </li>
            <li class="desc">you are the company you keep...</li>
                </ul>

        <ul>
            <li>
                <label for="nav-toggler" class="nav-toggler-btn">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="3" y1="12" x2="21" y2="12" /><line x1="3" y1="6" x2="21" y2="6" /><line x1="3" y1="18" x2="21" y2="18" /></svg>
                </label>
            </li>
        </ul>
    </nav>

    <nav class="site-nav">
        <input type="checkbox" id="nav-toggler">

        <ul class="nav-menu">
            <li>
                <a href="../index.html">首页</a>
            </li>

                                    <li>
                <a href="../start-page.html">关于我</a>
            </li>
                        <li>
                <form method="post" action="../index.html">
                    <input type="search" id="s" name="s">
                </form>
            </li>
        </ul>
    </nav>
</header>

<main class="container">
    <div class="container-thin">
        <article class="post" itemscope itemtype="http://schema.org/BlogPosting">
                <header class="entry-header text-center">
        <h1 class="entry-title" itemprop="name headline">
            <a href="2742.html" itemprop="url">Joplin server 搭建</a>
        </h1>
                <ul class="entry-meta list-inline text-muted">
            <li class="feather-calendar"><time datetime="2022-07-14T08:19:00+08:00" itemprop="datePublished">2022-07-14</time></li>
            <li class="feather-folder"><a href="../category/Linux/index.html">Linux</a></li>
            <li class="feather-message"><a href="2742.html#comments"  itemprop="discussionUrl">3 条评论</a></li>
        </ul>
            </header>

            <div class="entry-content fmt" itemprop="articleBody">
                <p>joplin 是一款开源笔记应用，全平台适用，支持多种云端同步方式。最近体验了下感觉不错，尤其是可以自行搭建 server 服务端保存数据，适合喜欢管理整个数据流程的人士。下面介绍如何在服务器通过 docker 搭建 joplin server 的方法。</p><p>joplin 官网：<a href="https://joplinapp.org/">https://joplinapp.org/</a><br>GitHub 主页：<a href="https://github.com/laurent22/joplin">https://github.com/laurent22/joplin</a><br>各个平台客户端下载：<a href="https://joplinapp.org/download/">https://joplinapp.org/download/</a></p><p>我的服务器系统平台是 Ubuntu 20.04。</p><!--more--><h3>docker 环境安装</h3><p>首先如果安装过老版的 docker 先卸载:</p><pre><code>sudo apt-get remove docker docker-engine docker.io containerd runc
</code></pre><p>安装基础环境：</p><pre><code> sudo apt-get update
 sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release</code></pre><p>添加 docker 官方 GPG key：</p><pre><code>sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</code></pre><p>安装 docker 和 docker-compose：</p><pre><code> sudo apt-get update
 sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin</code></pre><p>docker 配置为非 root 用户，解决执行命令需要 sudo：</p><pre><code>sudo groupadd docker
sudo usermod -aG docker $USER
su - ${USER}</code></pre><h3>配置 docker-compose</h3><p>通过 docker-compose 可以方便的配置 docker 容器设置及多容器之间数据交互。</p><p>新建 joplin 文件夹用来存放配置 <code>docker-compose.yml</code> 以及 <code>.env</code> 环境变量文件，我喜欢放在 opt 路径下：</p><pre><code>mkdir /opt/docker/joplin
cd /opt/docker/joplin
</code></pre><p>新建环境变量文件 <code>.env</code> 内容如下：</p><pre><code>APP_BASE_URL=https://joplin.your.site
APP_PORT=22300
# 
DB_CLIENT=postgres
POSTGRES_PASSWORD=PASSWORD
POSTGRES_DATABASE=joplin
POSTGRES_USER=USERNAME
POSTGRES_PORT=5432
POSTGRES_HOST=localhost</code></pre><p>上面的配置中需要自行修改几项：</p><ul><li><code>APP_BASE_URL</code> 修改为你实际访问 joplin 服务的外网地址，需要提前配置好 dns 映射，我是通过 cloudflare 管理的</li><li><code>POSTGRES_PASSWORD</code> 修改数据库密码</li><li><code>POSTGRES_USER</code> 修改数据库用户名</li></ul><p>新建 <code>docker-compose.yml</code> 内容如下：</p><pre><code>version: '3'
services:
    db:
        image: postgres:13
        volumes:
            - ./data/postgres:/var/lib/postgresql/data
        ports:
            - &quot;5432:5432&quot;
        restart: unless-stopped
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DATABASE}
        network_mode: host
    app:
        image: joplin/server:latest
        depends_on:
            - db
        ports:
            - &quot;22300:22300&quot;
        restart: unless-stopped
        environment:
            - APP_PORT=${APP_PORT}
            - APP_BASE_URL=${APP_BASE_URL}
            - DB_CLIENT=${DB_CLIENT}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DATABASE=${POSTGRES_DATABASE}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_HOST=${POSTGRES_HOST}
        network_mode: host</code></pre><p>docker-compose 会自动调用同一路径下的 <code>.env</code> 文件中定义的环境变量。</p><p>完成配置后启动容器：</p><pre><code>docker-compose up -d
</code></pre><h3>nginx 配置</h3><p>外网访问上面定义的 url 后，需要通过反向代理将数据流传给 joplin server 端口 22300，我使用的是 nginx 配置如下：</p><pre><code>server {
    listen        443 ssl http2;
    listen        [::]:443 ssl http2;
    server_name   joplin.your.site;
    include       my-server/ssl; 加入 ssl 相关配置

    location / {
        proxy_pass          http://127.0.0.1:22300;
        proxy_redirect      off;

        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    Upgrade           $http_upgrade;
        proxy_set_header    Connection        &quot;upgrade&quot;;
        proxy_http_version  1.1;
    }
}</code></pre><p>完成后重启 nginx：</p><pre><code>systemctl restart nginx
</code></pre><h3>访问</h3><p>配置好 docker 和 nginx 后就可以访问上面设置的 url 访问 joplin 了，默认会自动创建一个用户 <strong>admin@localhost</strong>，密码是 <strong>admin</strong>。</p><p>第一次登录进去后最好修改下默认管理员密码，还可以创建多个账户。</p><p>如果要适用账户的邮件服务，需要额外配置 SMTP 相关的内容，这里不做介绍，新建账户的激活邮件可以在管理菜单中找到，没有配置邮件服务的话无法发送成功，可以手动将邮件中的账户激活链接发送给别人。</p><p>如果登录网址无法访问网页，可能是 docker 配置有问题，可以通过 log 查看是否有报错信息：</p><pre><code>docker container list # 查询到容器的 ID
docker logs ID # 通过 joplin 的容器 ID 查询其日志
</code></pre><h3>插件</h3><p>joplin 桌面版支持安装插件，第三方插件有很多，可以在下面链接查找：<a href="https://github.com/joplin/plugins/blob/master/README.md#plugins">Joplin Plugin Repository</a></p><h3>参考链接</h3><p><a href="https://docs.docker.com/engine/install/ubuntu/">nstall Docker Engine on Ubuntu</a><br><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04">How To Install and Use Docker on Ubuntu 20.04</a><br><a href="https://docs.docker.com/engine/reference/commandline/logs/">docker logs</a><br><a href="https://github.com/laurent22/joplin/blob/dev/packages/server/README.md">joplin server install</a><br><a href="https://github.com/laurent22/joplin/blob/dev/docker-compose.server.yml">docker-compose.server.yml</a><br><a href="https://github.com/laurent22/joplin/blob/dev/.env-sample">.env-sample</a></p>                <p itemprop="keywords">标签：无</p>
            </div>
        </article>

        <nav class="post-nav">
            <ul class="page-navigator">
                <li class="prev"><a href="2731.html" title="Gradient 渐变色研究">Gradient 渐变色研究</a></li>
                <li class="next"><a href="2744.html" title="自建 RustDesk server">自建 RustDesk server</a></li>
            </ul>
        </nav>

        <div id="comments">
                <h2 class="text-center">3 条评论</h2>

        <ol class="comment-list">        <li itemscope itemtype="http://schema.org/UserComments" id="comment-86" class="comment-body comment-parent comment-odd">
            <div class="comment-author" itemprop="creator" itemscope itemtype="http://schema.org/Person">
                <span
                    itemprop="image">
                    <img class="avatar" loading="lazy" src="https://secure.gravatar.com/avatar/26cc98842d96a2657e6ab7bf142945fc?s=64&amp;r=G&amp;d=identicon" alt="php guider" width="64" height="64" />                </span>
                <cite class="fn" itemprop="name">php guider</cite>
            </div>
            <div class="comment-meta">
                <a href="2742.html#comment-86">
                    <time itemprop="commentTime"
                          datetime="2025-01-23T05:06:21+08:00">January 23rd, 2025 at 05:06 am</time>
                </a>
                            </div>
            <div class="comment-content" itemprop="commentText">
                <p>Joplin is an impressive open-source note-taking application that's available on all major platforms. What really stands out is its flexibility to support multiple cloud synchronization methods and even the ability to host your own server, offering complete control over your data. I recently set up a Joplin Server on my Ubuntu 20.04 system using Docker, and the process was surprisingly smooth. The ability to configure Docker Compose and manage environment variables like APP_BASE_URL and POSTGRES_PASSWORD made the deployment both organized and efficient.</p><p>For those new to Docker, the first step is to ensure a proper Install Docker on Ubuntu guide. It's a lifesaver for setting up the required Docker environment on your system. Configuring NGINX as a reverse proxy for SSL and secure access further enhanced the deployment experience.</p><p>The default admin account provided (admin@localhost with the password admin) is a thoughtful addition for a quick setup, though it's advisable to change the password immediately for security. If you're looking for a self-hosted solution that combines productivity and privacy, Joplin paired with Docker is a fantastic choice. I highly recommend exploring the official documentation and GitHub repository for further customization options.</p>            </div>
            <div class="comment-reply">
                <a href="2742.html?replyTo=86#respond-post-2742" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; return TypechoComment.reply('comment-86', 86, this);" data-cf-modified-66bd7110de0b2d97df1c3f5f-="">回复</a>            </div>
                    </li>
                <li itemscope itemtype="http://schema.org/UserComments" id="comment-87" class="comment-body comment-parent comment-even">
            <div class="comment-author" itemprop="creator" itemscope itemtype="http://schema.org/Person">
                <span
                    itemprop="image">
                    <img class="avatar" loading="lazy" src="https://secure.gravatar.com/avatar/26cc98842d96a2657e6ab7bf142945fc?s=64&amp;r=G&amp;d=identicon" alt="php guider" width="64" height="64" />                </span>
                <cite class="fn" itemprop="name">php guider</cite>
            </div>
            <div class="comment-meta">
                <a href="2742.html#comment-87">
                    <time itemprop="commentTime"
                          datetime="2025-01-23T05:07:40+08:00">January 23rd, 2025 at 05:07 am</time>
                </a>
                            </div>
            <div class="comment-content" itemprop="commentText">
                <p>Joplin is an impressive open-source note-taking application that's available on all major platforms. What really stands out is its flexibility to support multiple cloud synchronization methods and even the ability to host your own server, offering complete control over your data. I recently set up a Joplin Server on my Ubuntu 20.04 system using Docker, and the process was surprisingly smooth. The ability to configure Docker Compose and manage environment variables like APP_BASE_URL and POSTGRES_PASSWORD made the deployment both organized and efficient.</p><p>For those new to Docker, the first step is to ensure a proper Install Docker on Ubuntu guide. It's a lifesaver for setting up the required Docker environment on your system. Configuring NGINX as a reverse proxy for SSL and secure access further enhanced the deployment experience.</p><p>The default admin account provided (admin@localhost with the password admin) is a thoughtful addition for a quick setup, though it's advisable to change the password immediately for security. If you're looking for a self-hosted solution that combines productivity and privacy, Joplin paired with Docker is a fantastic choice. I highly recommend exploring the official documentation and GitHub repository for further customization options.</p>            </div>
            <div class="comment-reply">
                <a href="2742.html?replyTo=87#respond-post-2742" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; return TypechoComment.reply('comment-87', 87, this);" data-cf-modified-66bd7110de0b2d97df1c3f5f-="">回复</a>            </div>
                    </li>
                <li itemscope itemtype="http://schema.org/UserComments" id="comment-88" class="comment-body comment-parent comment-odd">
            <div class="comment-author" itemprop="creator" itemscope itemtype="http://schema.org/Person">
                <span
                    itemprop="image">
                    <img class="avatar" loading="lazy" src="https://secure.gravatar.com/avatar/26cc98842d96a2657e6ab7bf142945fc?s=64&amp;r=G&amp;d=identicon" alt="php guider" width="64" height="64" />                </span>
                <cite class="fn" itemprop="name"><a href="https://docs.vultr.com/how-to-install-docker-on-ubuntu-24-04" rel="external nofollow">php guider</a></cite>
            </div>
            <div class="comment-meta">
                <a href="2742.html#comment-88">
                    <time itemprop="commentTime"
                          datetime="2025-01-23T05:08:40+08:00">January 23rd, 2025 at 05:08 am</time>
                </a>
                            </div>
            <div class="comment-content" itemprop="commentText">
                <p>Joplin is an impressive open-source note-taking application that's available on all major platforms. What really stands out is its flexibility to support multiple cloud synchronization methods and even the ability to host your own server, offering complete control over your data. I recently set up a Joplin Server on my Ubuntu 20.04 system using Docker, and the process was surprisingly smooth. The ability to configure Docker Compose and manage environment variables like APP_BASE_URL and POSTGRES_PASSWORD made the deployment both organized and efficient.</p><p>For those new to Docker, the first step is to ensure a proper Install Docker on Ubuntu guide. It's a lifesaver for setting up the required Docker environment on your system. Configuring NGINX as a reverse proxy for SSL and secure access further enhance the deployment experience .</p><p>The default admin account provided (admin@localhost with the password admin) is a thoughtful addition for a quick setup, though it's advisable to change the password immediately for security. If you're looking for a self-hosted solution that combines productivity and privacy , Joplin paired with Docker is a fantastic choice. I highly recommend exploring the official documentation and GitHub repository for further customization options.</p>            </div>
            <div class="comment-reply">
                <a href="2742.html?replyTo=88#respond-post-2742" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; return TypechoComment.reply('comment-88', 88, this);" data-cf-modified-66bd7110de0b2d97df1c3f5f-="">回复</a>            </div>
                    </li>
        </ol>
        <nav></nav>

    
            <div id="respond-post-2742" class="respond">
            <div class="cancel-comment-reply">
                <a id="cancel-comment-reply-link" href="2742.html#respond-post-2742" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; return TypechoComment.cancelReply();" data-cf-modified-66bd7110de0b2d97df1c3f5f-="">取消回复</a>            </div>

            <h5 id="response">你的评论</h5>

            <form method="post" action="https://blog.niekun.net/archives/2742.html/comment?parent=88" id="comment-form" role="form">
                <div class="grid">
                    <textarea placeholder="评论内容..." rows="4" cols="300" name="text" id="textarea" required></textarea>
                </div>
                                <div class="grid">
                    <input type="text" placeholder="名字" name="author" id="author" value="" required/>
                    <input type="email" placeholder="Email" name="mail" id="mail" value="" required />
                    <input type="url" placeholder="http://网站（选填）" name="url" id="url" value="" />
                </div>
                                <button type="submit">提交评论</button>
            </form>
        </div>
    </div>
    </div>
</main>

<footer class="site-footer container-fluid">
    <div class="d-flex justify-content-between">
        <ul class="list-inline text-muted">
            <li>&copy; 2025 <a href="../index.html">Marco Nie</a></li>
            <li><a href="../feed/index.html">RSS</a></li>
        </ul>
        <ul class="list-inline text-muted">
            <li>
                Powered by <a href="https://typecho.org">Typecho</a>            </li>
        </ul>
    </div>
</footer>


<script src="../cdn-cgi/scripts/7d0fa10a/cloudflare-static/rocket-loader.min.js" data-cf-settings="66bd7110de0b2d97df1c3f5f-|49" defer></script><script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'918a3f0f7e1b7bbc',t:'MTc0MDY4MTAyOS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
